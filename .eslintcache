[{"/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/index.js":"1","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/App.js":"2","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/reportWebVitals.js":"3","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/BottomNav.js":"4","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/PublishBtn.js":"5","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/ListChannels.js":"6","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/FilterTest.js":"7","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/Cards.js":"8","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/MainScreen.js":"9","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/Animation.js":"10"},{"size":500,"mtime":1607358812757,"results":"11","hashOfConfig":"12"},{"size":331,"mtime":1615541014471,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607358812757,"results":"14","hashOfConfig":"12"},{"size":6032,"mtime":1615542694331,"results":"15","hashOfConfig":"12"},{"size":6561,"mtime":1615544232380,"results":"16","hashOfConfig":"12"},{"size":1695,"mtime":1613723643008,"results":"17","hashOfConfig":"12"},{"size":506,"mtime":1615542640279,"results":"18","hashOfConfig":"12"},{"size":1105,"mtime":1614691487306,"results":"19","hashOfConfig":"12"},{"size":9569,"mtime":1615543310193,"results":"20","hashOfConfig":"12"},{"size":419,"mtime":1613986554939,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ob4esn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/index.js",[],["49","50"],"/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/App.js",[],"/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/reportWebVitals.js",[],"/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/BottomNav.js",["51","52"],"import React, { useState, useEffect } from 'react';\nimport {MdExplore, MdTrackChanges, MdPersonPin, MdGames} from 'react-icons/md';\n\nimport MainScreen from './MainScreen';\nimport ListChannels from './ListChannels';\nimport Animation from './Animation';\nimport Cards from './Cards';\nimport FilterTest from './FilterTest';\n\nfunction BottomNav() {\n    const [selection, setSelection] = useState('feed');\n\n    const handleFeed = () => {\n        setSelection('feed');\n    }\n    const handleChannels = () => {\n        setSelection('channels');\n    }\n    const handleOptions = () => {\n        setSelection('options');\n    }\n    const handleFun = () => {\n        setSelection('games');\n    }\n\n    if (selection === 'feed') {\n    return(\n    <div className='OuterContainer'>\n    <MainScreen />\n        <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n            <div className='Channels' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleChannels}><MdTrackChanges /></button>\n            </div>\n            <div className='Feed' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFeed}><MdExplore /></button>\n            </div>\n            <div className='Options' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleOptions}><MdPersonPin /></button>\n            </div>\n            <div className='Games' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFun}><MdGames /></button>\n            </div>\n        </div>\n    </div>\n    )\n    }\n    else if (selection === 'channels') {\n        return(\n        <div className='OuterContainer'>\n            <ListChannels />\n            <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n            <div className='Channels' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleChannels}><MdTrackChanges /></button>\n            </div>\n            <div className='Feed' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFeed}><MdExplore /></button>\n            </div>\n            <div className='Options' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleOptions}><MdPersonPin /></button>\n            </div>\n            <div className='Games' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFun}><MdGames/></button>\n            </div>\n        </div>\n    </div>\n        )\n    }\n    else if (selection === 'options') {\n        return(\n        <div className='OuterContainer'>\n            <h1>Options</h1>\n            <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n            <div className='Channels' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleChannels}><MdTrackChanges /></button>\n            </div>\n            <div className='Feed' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFeed}><MdExplore /></button>\n            </div>\n            <div className='Options' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleOptions}><MdPersonPin /></button>\n            </div>\n            <div className='Games' style={{display: 'flex'}}>\n                <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                onClick={handleFun}><MdGames /></button>\n            </div>\n        </div>\n    </div>\n        )\n    }\n    else if (selection === 'games') {\n        return(\n            <div className='OuterContainer'>\n                <h1>Testing Screen</h1>\n                <Animation />\n                <FilterTest />\n                <div className='NavContainer' style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'orange'}}>\n                <div className='Channels' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleChannels}><MdTrackChanges /></button>\n                </div>\n                <div className='Feed' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleFeed}><MdExplore /></button>\n                </div>\n                <div className='Options' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleOptions}><MdPersonPin /></button>\n                </div>\n                <div className='Games' style={{display: 'flex'}}>\n                    <button style={{width: 150, height: 100, backgroundColor: '#fff', fontSize: 42}}\n                    onClick={handleFun}><MdGames /></button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default BottomNav;","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/PublishBtn.js",[],"/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/ListChannels.js",[],"/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/FilterTest.js",["53","54"],"import React, {useState, useEffect} from 'react';\n\nconst people = [\n  {\n    name: 'James',\n    age: 31,\n  },\n  {\n    name: 'John',\n    age: 45,\n  },\n  {\n    name: 'Paul',\n    age: 65,\n  },\n  {\n    name: 'Ringo',\n    age: 49,\n  },\n  {\n    name: 'George',\n    age: 34,\n  }\n];\n\nfunction FilterTest() {\n  return (\n    <div>\n      {people.filter(person => person.age < 60).map(filteredPerson => (\n        <li>\n          {filteredPerson.name}\n        </li>\n      ))}\n    </div>\n  );\n}\n\nexport default FilterTest;","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/Cards.js",["55","56","57"],"import React from 'react';\nimport '../cards.css';\n\nfunction Cards() {\n\n    return(\n    <div className=\"body\">\n        <div className=\"container\">\n            <div className=\"card\">\n                <span></span>\n                <div className=\"content\">\n                    <h2>Header Text</h2>\n                    <p>Description or paragraph of the card.</p>\n                    <a href=\"#\">Read more</a>\n                </div>\n            </div>\n            <div className=\"card\">\n                <span></span>\n                <div className=\"content\">\n                    <h2>Header Text</h2>\n                    <p>Description or paragraph of the card.</p>\n                    <a href=\"#\">Read more</a>\n                </div>\n            </div>\n            <div className=\"card\">\n                <span></span>\n                <div className=\"content\">\n                    <h2>Header Text</h2>\n                    <p>Description or paragraph of the card.</p>\n                    <a href=\"#\">Read more</a>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Cards;","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/MainScreen.js",["58"],"import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport {IoChevronUpOutline, IoChevronDownOutline, IoEllipsisHorizontal, IoLocationSharp, IoChatbubblesOutline} from 'react-icons/io5';\n\nfunction MainScreen() {\n\n    // Array of messages of a selected Channel\n    const [messages, setMessages] = useState([]);\n    // Array that holds channels\n    const [channels, setChannels] = useState([]);\n    // Array that holds locations\n    const [locations, setLocations] = useState([]);\n\n    // Holds the current selected Channel, by default \"@Main\"\n    const [selectedChannel, setSelectedChannel] = useState('@Main');\n    const [selChannelId, setChanId] = useState(1);\n    const [selectedLoc, setSelectedLoc] = useState('Finland');\n\n    // Options panel for message\n    const [options, setOptions] = useState(false);\n    const [id, setId] = useState(0);\n\n  /*  function filterByLocation() {\n        setLocationFilter(\n            messages.filter(msg => msg.messageLocation.location === selectedLoc)\n        );\n    } */\n\n    // Fetch messages by channelname\n    async function fetchMessages() {\n        const response = await fetch('http://localhost:8080/channelbyname/'+selectedChannel);\n        const json = await response.json();\n        setMessages(json.messages);\n        setSelectedChannel(json.channelName);\n        setChanId(json.channelId);\n        console.log(\"Fetched messages from \" + selectedChannel + \" and filtered by \" + selectedLoc);\n    }\n\n    // Fetch Channels\n    async function fetchChannels() {\n        const response = await fetch('http://localhost:8080/channels');\n        const json = await response.json();\n        setChannels(json);\n        console.log(\"fetched Channels\");\n    }\n    // Fetch Locations\n    async function fetchLocations() {\n        const response = await fetch('http://localhost:8080/locations');\n        const json = await response.json();\n        setLocations(json);\n        console.log(\"fetched Locations\");\n    } \n\n    const postDelete = (msgId) => {\n        console.log(\"Deleting message (ID) \" + id);\n        axios.delete(\"http://localhost:8080/message/delete/\"+id)\n            .then(res => {\n                console.log(res.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    const handleOptionsOpen = (id) => {\n        setOptions(true);\n        console.log(\"Options for message with ID: \" + id);\n        setId(id);\n    }\n    const handleOptionsClose = () => {\n        setOptions(false);\n    }\n\n    const onChannelChange = (e) => {\n        setSelectedChannel(e.target.value);\n    }\n    const onLocationChange = (e) => {\n        setSelectedLoc(e.target.value);  \n    }\n\n    const onUpvote = (id, text, color, ht, loc, likes) => {\n        const msgData = {\n            messageId: id,\n            messageText: text,\n            messageColor: color,\n            messageHashtag: ht,\n            messageLocation: {\n                locationId: loc\n            },\n            messageLikes: likes+1,\n            messageChannel: {\n                channelId: selChannelId\n            }\n        }\n        axios.put('http://localhost:8080/upvote', msgData)\n        .then(response => {\n            if (response.status === 200) {\n                console.log(\"upvoted message \" + id);\n            } else {\n                console.log(\"Upvote failed\");\n            }\n        })\n    }\n\n    const onDownvote = (id, text, color, ht, loc, likes) => {\n        const msgData = {\n            messageId: id,\n            messageText: text,\n            messageColor: color,\n            messageHashtag: ht,\n            messageLocation: {\n                locationId: loc\n            },\n            messageLikes: likes-1,\n            messageChannel: {\n                channelId: selChannelId\n            }\n        }\n        axios.put('http://localhost:8080/upvote', msgData)\n        .then(response => {\n            if (response.status === 200) {\n                console.log(\"Downvoted message \" + id);\n            } else {\n                console.log(\"Downvote failed\");\n            }\n        })\n    }\n\n    useEffect(() => {fetchMessages()}, [selectedChannel, selectedLoc]);\n    useEffect(() => {fetchChannels()}, []);\n    useEffect(() => {fetchLocations()}, []);\n\n    \n    if (options === true) {\n        return(\n            <div style={{display: 'flex', flexDirection: 'column', backgroundColor: 'orange', alignItems: 'center'}}>\n                <h1>Message settings</h1>\n                <p>MessageID: {id}</p>\n                <div className='op_btns' style={{display: 'flex', flexDirection: 'column', width: 200, alignItems: 'center', margin: 20}}>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}} onClick={postDelete}>Delete</button>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}}>Share</button>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}}>Save</button>\n                    <button style={{display: 'flex', height: 40, width: 150, fontSize: 24}} onClick={handleOptionsClose}>Close</button>\n                </div>\n            </div>\n        )\n    }\n    return(\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <div style={{display: 'flex', backgroundColor: '#d7d9db', alignItems: 'center', justifyContent: 'center', padding: 10}}>\n                <div style={{display: 'flex', marginRight: 20, backgroundColor: 'orange', alignItems: 'center', justifyContent: 'center', borderRadius: 50, paddingLeft: 30, paddingRight: 30}}>\n                    <IoChatbubblesOutline style={{fontSize: 28, color: '#fff', margin: 10}} />\n                <select onChange={onChannelChange} style={{width: 200, height: 40, fontSize: 24, display: 'flex', BackgroundColor: '#fff'}}>\n                    {channels.map(chan =>\n                       <option \n                       key={chan.channelId} \n                       value={chan.channelName}\n                       >{chan.channelName}</option> \n                    )}\n                </select>\n                </div>\n                <div style={{display: 'flex', marginRight: 20, backgroundColor: 'orange', alignItems: 'center', justifyContent: 'center', borderRadius: 50, paddingLeft: 30, paddingRight: 30}}>\n                    <IoLocationSharp style={{fontSize: 28, color: \"#fff\", margin: 10}}/>\n                        <select style={{display: 'flex', backgroundColor: '#fff', height: 40, width: 200, padding: 15, fontSize: 20}} onChange={onLocationChange}>\n                                {\n                                    locations.map((loc) => (\n                                        <option key={loc.locationId}>{loc.location}</option>\n                                    ))\n                                }\n                                <option value=\"\" selected disabled hidden>Choose Location</option>\n                        </select>\n                </div>\n            </div>\n            { \n            messages.filter(msg => msg.messageLocation.location === selectedLoc).map((msg) => (\n            <div key={msg.messageId} style={{backgroundColor: msg.messageColor}}>\n            <div id='jodelContainer' style={{margin: 10}}>\n                <div id='topBar' style={{display: 'flex', flexDirection: 'row'}}>\n                    <IoLocationSharp style={{color: \"#fff\", fontSize: 20, marginTop: 10, opacity: 0.7}}/>\n                    <p style={{color: \"#fff\", fontSize: 14, marginTop: 10, marginRight: 15, opacity: 0.7}}>{msg.messageLocation.location}</p>\n                    <p style={{color: \"#fff\", fontSize: 14, marginRight: 10}}><b>{selectedChannel}</b></p>\n                    <p style={{color: \"#fff\", fontSize: 14, opacity: 0.7}}>0s</p>\n                </div>\n                <div id='jodling' style={{display: 'flex'}}>\n                    <div id='textContent' style={{flex: 10}}>\n                        <p style={{color: \"#fff\", fontSize: 18}}>{msg.messageText}</p>\n                        <br />\n                        <p style={{color: \"#fff\", fontSize: 18}}><b>{msg.messageHashtag}</b></p>\n                        <p>{msg.messageId}</p>\n                    </div>\n                    <div id='rightControls' style={{flex: 1}}>\n                        <div id='likes' style={{display: 'flex', flexDirection: 'column'}}>\n                            <IoChevronUpOutline style={{color: \"#fff\", fontSize: 25}} \n                            onClick={() => \n                                onUpvote(msg.messageId, msg.messageText, msg.messageColor, msg.messageHashtag, msg.messageLocation.locationId, msg.messageLikes)\n                            }/>\n                            <p style={{color: \"#fff\", fontSize: 25, paddingLeft: 5}}>{msg.messageLikes}</p>\n                            <IoChevronDownOutline style={{color: \"#fff\", fontSize: 25}}\n                            onClick={() =>\n                            onDownvote(msg.messageId, msg.messageText, msg.messageColor, msg.messageHashtag, msg.messageLocation.locationId, msg.messageLikes)}/>\n                        </div>\n                    </div>\n                </div>\n                <div id='threeDots' style={{display: 'flex'}}>\n                    <IoEllipsisHorizontal style={{color: \"#fff\", fontSize: 30, flex: 1}}\n                    onClick={() => handleOptionsOpen(msg.messageId)} id={msg.messageId}/>\n                </div>\n            </div>\n            </div>\n            ))\n            }\n        </div>\n    )\n}\n\nexport default MainScreen;","/Users/feelikskilpi/Desktop/FeeliksKilpi.github.io/src/components/Animation.js",["59","60","61","62","63"],"import React, {useState, useEffect} from 'react';\nimport Character from '../assets/funnyBar.png';\nimport '../animate.css';\n\nfunction Animation() {\n\n    const css = {\n        animate: {\n\n        }\n    }\n\n    const handleClick = () => {\n\n    }\n\n    return(\n        <div className='Canvas'>\n            <img className='box2' src={Character} width='100px' height='100px'/>\n\n        </div>\n    )\n}\n\nexport default Animation;",["64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":13},{"ruleId":"70","severity":1,"message":"75","line":1,"column":16,"nodeType":"72","messageId":"73","endLine":1,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":1,"column":26,"nodeType":"72","messageId":"73","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":14,"column":21,"nodeType":"78","endLine":14,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":22,"column":21,"nodeType":"78","endLine":22,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":30,"column":21,"nodeType":"78","endLine":30,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":130,"column":40,"nodeType":"81","endLine":130,"endColumn":70,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"75","line":1,"column":16,"nodeType":"72","messageId":"73","endLine":1,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":1,"column":26,"nodeType":"72","messageId":"73","endLine":1,"endColumn":35},{"ruleId":"70","severity":1,"message":"83","line":7,"column":11,"nodeType":"72","messageId":"73","endLine":7,"endColumn":14},{"ruleId":"70","severity":1,"message":"84","line":13,"column":11,"nodeType":"72","messageId":"73","endLine":13,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":19,"column":13,"nodeType":"78","endLine":19,"endColumn":81},{"ruleId":"66","replacedBy":"87"},{"ruleId":"68","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Cards' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'css' is assigned a value but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [fetchMessages, selectedChannel, selectedLoc]",{"range":"94","text":"95"},[4162,4192],"[fetchMessages, selectedChannel, selectedLoc]"]